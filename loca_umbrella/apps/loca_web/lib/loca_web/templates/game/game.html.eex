<script>
  var game_id = '<%= @game_id %>';
  var user_name = '<%= @name %>';
  var messageBox = document.getElementById('message');

  let channel = socket.channel("game:" + game_id, {});
  channel.join();
  broadcastJoin();

  renderStatus('no_movement');

  var lopp = setInterval(() => {
    checkPosition();
  }, 1000);

  function checkPosition() {
    navigator.geolocation.getCurrentPosition(function(position) {
      broadcastPosition({lat: position.coords.latitude, lng: position.coords.longitude, name: user_name});
      fetch('/check_position/' + game_id + '/' + user_name, {
        method: 'POST',
        body: JSON.stringify([{
          lat: position.coords.latitude,
          lng: position.coords.longitude
        }])
      })
      .then(response => response.json())
      .then(data => {
        console.log(data)
        renderStatus(data.status.result.action);
      });
    }, (err) => { console.log(err) })
  }

  function renderStatus(status) {
    switch (status) {
      case 'further':
        document.body.style.backgroundColor = 'red';
        break;
      case 'closer':
        document.body.style.backgroundColor = 'green';
        break;
      case 'no_movement':
        document.body.style.backgroundColor = 'gray';
        break;
      case 'on_point':
        document.body.style.backgroundColor = 'yellow';
        broadcastState(status);
        break;
      case 'winner':
        document.body.style.backgroundColor = 'pink';
        broadcastState(status);
        clearInterval(lopp);
        break;
      default:
    }
  }

  function broadcastPosition(position) {
    channel.push("moved", position, 10000);
  }

  function broadcastState(state) {
    channel.push("state", {state: state, user_name: user_name}, 10000);
  }

  function broadcastJoin() {
    channel.push("join", {user_name: user_name}, 10000);
  }

</script>
